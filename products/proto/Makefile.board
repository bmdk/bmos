# Copyright (c) 2019 Brian Thomas Murphy
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

ifneq ($(TOOLCHAIN_ROOT),)
TOOLCHAIN_PFX = $(TOOLCHAIN_ROOT)/
endif

CONFIG_NEWLIB ?= n

XCC = $(TOOLCHAIN_PFX)arm-none-eabi-gcc
XOBJCOPY = $(TOOLCHAIN_PFX)arm-none-eabi-objcopy

BUILD_DIR ?= build

OBJDIR = $(BUILD_DIR)/obj-$(PROG)

all: $(BUILD_DIR)/$(PROG).bin

clean:
	rm -fr $(BUILD_DIR)

XCFLAGS.h735dk += -DSTM32_H7XX
XCFLAGS.h735dk += -DSTM32_H735DK
STACK_END.h735dk = 0x20020000
XCFLAGS.h735dk += -mcpu=cortex-m7
XCFLAGS.h735dk += -DCONFIG_LWIP -DLWIP_DEBUG

XCFLAGS.h743wa += -DSTM32_H7XX
XCFLAGS.h743wa += -DSTM32_H743WA
STACK_END.h743wa = 0x20020000
XCFLAGS.h743wa += -mcpu=cortex-m7

XCFLAGS.h743nucleo += -DSTM32_H7XX
STACK_END.h743nucleo = 0x20020000
XCFLAGS.h743nucleo += -mcpu=cortex-m7
XCFLAGS.h743nucleo += -DCONFIG_LWIP -DLWIP_DEBUG

XCFLAGS.h745nucleo += -DSTM32_H7XX -DSTM32_H745N
STACK_END.h745nucleo = 0x20020000
XCFLAGS.h745nucleo += -mcpu=cortex-m7
XCFLAGS.h745nucleo += -DCONFIG_LWIP -DLWIP_DEBUG

XCFLAGS.l4r += -DSTM32_L4R
XCFLAGS.l4r += -mcpu=cortex-m4
STACK_END.l4r = 0x200A0000

XCFLAGS.f411bp += -DSTM32_F411
XCFLAGS.f411bp += -DSTM32_F411BP
XCFLAGS.f411bp += -mcpu=cortex-m4
STACK_END.f411bp = 0x20020000
#XCFLAGS.f411bp += -DWS2811
XCFLAGS.f411bp += -DCFG_TUSB_MCU=OPT_MCU_STM32F4
XCFLAGS.f411bp += -DSTM32F411xE

XCFLAGS.f401bp += -DSTM32_F401
XCFLAGS.f401bp += -DSTM32_F401BP
XCFLAGS.f401bp += -mcpu=cortex-m4
STACK_END.f401bp = 0x20018000
XCFLAGS.f401bp += -DWS2811
XCFLAGS.f401bp += -DCFG_TUSB_MCU=OPT_MCU_STM32F4
XCFLAGS.f401bp += -DSTM32F401xC

XCFLAGS.f407deb += -DSTM32_F407
XCFLAGS.f407deb += -DSTM32_F4XX
XCFLAGS.f407deb += -DSTM32_F407DEB
XCFLAGS.f407deb += -mcpu=cortex-m4
STACK_END.f407deb = 0x20020000

XCFLAGS.f407debm += -DSTM32_F407
XCFLAGS.f407debm += -DSTM32_F4XX
XCFLAGS.f407debm += -DSTM32_F407DEBM
XCFLAGS.f407debm += -mcpu=cortex-m4
STACK_END.f407debm = 0x20020000

XCFLAGS.f429 += -DSTM32_F429 -DSTM32_LCD
XCFLAGS.f429 += -mcpu=cortex-m4
STACK_END.f429 = 0x20030000

XCFLAGS.f469d += -DSTM32_F469D -DSTM32_F4XX
XCFLAGS.f469d += -mcpu=cortex-m4
STACK_END.f469d = 0x20030000

XCFLAGS.f746 += -DSTM32_F746 -DSTM32_LCD
XCFLAGS.f746 += -mcpu=cortex-m7
STACK_END.f746 = 0x20050000
XCFLAGS.f746 += -DCONFIG_LWIP -DLWIP_DEBUG

XCFLAGS.f767 += -DSTM32_F767
XCFLAGS.f767 += -mcpu=cortex-m7
STACK_END.f767 = 0x20080000
XCFLAGS.f767 += -DCONFIG_LWIP -DLWIP_DEBUG

XCFLAGS.l432 += -DSTM32_L432 -DSTM32_L4XX
XCFLAGS.l432 += -mcpu=cortex-m4
STACK_END.l432 = 0x20010000
XCFLAGS.l432 += -DWS2811

XCFLAGS.l452 += -DSTM32_L452 -DSTM32_L4XX
XCFLAGS.l452 += -mcpu=cortex-m4
STACK_END.l452 = 0x20028000

XCFLAGS.l452 += -DWS2811

XCFLAGS.l496 += -DSTM32_L496 -DSTM32_L4XX
XCFLAGS.l496 += -mcpu=cortex-m4
STACK_END.l496 = 0x20040000
XCFLAGS.l496 += -DWS2811

XCFLAGS.g474n += -DSTM32_G4XX -DSTM32_G474N
XCFLAGS.g474n += -mcpu=cortex-m4
STACK_END.g474n = 0x20020000

XCFLAGS.g431kbn += -DSTM32_G4XX -DSTM32_G432KBN
XCFLAGS.g431kbn += -mcpu=cortex-m4
STACK_END.g431kbn = 0x20008000

XCFLAGS += $(XCFLAGS.$(PROG))
STACK_END = $(STACK_END.$(PROG))

XCFLAGS += -DARCH_STM32
XCFLAGS += -mthumb
XCFLAGS += -Wall -Werror
#XCFLAGS += -Os
XCFLAGS += -O2
XCFLAGS += -mno-unaligned-access
XCFLAGS += -ffunction-sections
# generate dependency information
XCFLAGS += -MD
XCFLAGS += -DAPPL
XCFLAGS += -DBMOS

ifeq ($(CONFIG_NEWLIB), y)
XCFLAGS += -DCONFIG_NEWLIB
XCFLAGS += -DPRIVATE_SBRK
endif

ifeq ($(CONFIG_NEWLIB), y)
XLDFLAGS += -lc -lnosys
XLDFLAGS += -specs=nano.specs
else
XLDFLAGS += -nostdlib
endif
ifeq ($(findstring $(PROG), h743nucleo h745nucleo h735dk, h743wa),)
XLDFLAGS += -T appl.ld
else
XLDFLAGS += -T appl-h7xx.ld
endif
XLDFLAGS += -Wl,--defsym,_stack_end=$(STACK_END)
XLDFLAGS += -Wl,--gc-sections
XLDFLAGS += $(XCFLAGS)

MODULES += std
MODULES += appl/shell
MODULES += appl/prod/proto
MODULES += appl/xslog
MODULES += hal/core
MODULES += hal/cpu/arm
MODULES += hal/stm32/core
MODULES += os/bmos
MODULES += appl/xmodem
MODULES += hal/misc

MODULES += prot/net/lwip/core
MODULES += prot/net/lwip/core_ipv4
MODULES += prot/net/lwip/netif
MODULES += prot/net/lwip/httpd

MODULES += prot/net/lwip/apps/test

MODULES += prot/usb/tusb/if
MODULES += prot/usb/tusb/tusb

ifneq ($(CONFIG_NEWLIB), y)
MODULES += lib/libc_min
endif

XCFLAGS += $(addsuffix /inc, $(addprefix -I$(ROOT)/modules/, $(MODULES)))

# cmsis
XCFLAGS.cmsis += -I$(ROOT)/external/cmsis_5/CMSIS/Core/Include
XCFLAGS.cmsisf4 += -I$(ROOT)/external/st/cmsis_device_f4/Include
XCFLAGS.cmsish7 += -I$(ROOT)/external/st/cmsis_device_h7/Include

XCFLAGS.f401bp += $(XCFLAGS.cmsis) $(XCFLAGS.cmsisf4)
XCFLAGS.f411bp += $(XCFLAGS.cmsis) $(XCFLAGS.cmsisf4)

XCFLAGS.h743wa += $(XCFLAGS.cmsis) $(XCFLAGS.cmsish7)

VPATH += $(addsuffix /src, $(addprefix $(ROOT)/modules/, $(MODULES)))

FILES += main.o
FILES += start.o
FILES += stm32_hal_gpio.o
FILES += shell.o
FILES += cortexm.o
FILES += xtime.o
FILES += hal_common.o
FILES += hal_gpio.o
FILES += hal_int.o
FILES += io.o
FILES += mem.o
FILES += misc.o
FILES += fast_log.o
FILES += stm32_hal.o
FILES += stm32_timer.o
FILES += xslog.o

# BMOS
FILES += reg.o
FILES += task.o
FILES += queue.o
FILES += op_msg.o

ifneq ($(CONFIG_NEWLIB), y)
FILES += libc.o
FILES += malloc.o
endif

FILES.h7xx += stm32_usart_b.o
FILES.h7xx += stm32_rcc_c.o
FILES.h7xx += stm32_hal_rtc.o
FILES.h7xx += stm32_flash_h7xx.o
FILES.h7xx += stm32_wdog.o
FILES.h7xx += stm32_exti_h7xx.o
FILES.h7xx += stm32_pwr_h7xx.o
FILES.h7xx += stm32_eth_h7xx.o
FILES.h7xx += stm32_hal_bdma.o
FILES.h7xx += stm32_hal_dma.o
FILES.h7xx += stm32_hal_dmamux.o
FILES.h7xx += stm32_hal_i2c.o
FILES.h7xx += hd44780.o

FILES.h735dk += stm32_lcd.o
FILES.h735dk += stm32_board_h735dk.o
FILES.h735dk += lwip.o
FILES.h735dk += stm32_fdcan.o
FILES.h735dk += fdcan.o

FILES.h743wa += stm32_board_h743wa.o

FILES.h743nucleo += stm32_board_h743nucleo.o
FILES.h743nucleo += lwip.o

FILES.h745nucleo += stm32_board_h745nucleo.o
FILES.h745nucleo += lwip.o
FILES.h745nucleo += stm32_fdcan.o
FILES.h745nucleo += fdcan.o

FILES.f7xx += stm32_pwr_f7xx.o
FILES.f4xx += stm32_pwr_f4xx.o
FILES.fxxx += stm32_exti_fxxx.o

FILES.f411bp += stm32_hal_rtc.o
FILES.f411bp += stm32_usart_a.o
FILES.f411bp += stm32_rcc_a.o
FILES.f411bp += stm32_board_f411bp.o
FILES.f411bp += stm32_hal_dma.o
FILES.f411bp += ws2811.o

FILES.tusb += stm32_usbd.o
FILES.tusb += tusb_cdc.o
FILES.tusb += cdc_device.o
FILES.tusb += dcd_synopsys.o
FILES.tusb += tusb.o
FILES.tusb += tusb_fifo.o
FILES.tusb += usb_descriptors.o
FILES.tusb += usbd.o
FILES.tusb += usbd_control.o

FILES.f411bp += $(FILES.tusb)
FILES.f411bp += $(FILES.f4xx)
FILES.f411bp += $(FILES.fxxx)

FILES.f401bp += stm32_hal_rtc.o
FILES.f401bp += stm32_usart_a.o
FILES.f401bp += stm32_rcc_a.o
FILES.f401bp += stm32_board_f401bp.o
FILES.f401bp += stm32_hal_dma.o
FILES.f401bp += ws2811.o
FILES.f401bp += $(FILES.tusb)
FILES.f401bp += $(FILES.f4xx)
FILES.f401bp += $(FILES.fxxx)

FILES.f407deb += stm32_hal_rtc.o
FILES.f407deb += stm32_usart_a.o
FILES.f407deb += stm32_rcc_a.o
FILES.f407deb += stm32_board_f407deb.o
FILES.f407deb += stm32_hal_dma.o
FILES.f407deb += $(FILES.f4xx)
FILES.f407deb += $(FILES.fxxx)

FILES.f407debm += stm32_hal_rtc.o
FILES.f407debm += stm32_usart_a.o
FILES.f407debm += stm32_rcc_a.o
FILES.f407debm += stm32_board_f407debm.o
FILES.f407debm += stm32_hal_dma.o
FILES.f407debm += $(FILES.f4xx)
FILES.f407debm += $(FILES.fxxx)

FILES.f429 += stm32_usart_a.o
FILES.f429 += stm32_rcc_a.o
FILES.f429 += stm32_board_f429.o
FILES.f429 += stm32_hal_spi.o
FILES.f429 += stm32_hal_dma.o
FILES.f429 += $(FILES.f4xx)
FILES.f429 += $(FILES.fxxx)

FILES.f469d += stm32_usart_a.o
FILES.f469d += stm32_rcc_a.o
FILES.f469d += stm32_board_f469d.o
FILES.f469d += stm32_hal_dma.o
FILES.f469d += $(FILES.f4xx)
FILES.f469d += $(FILES.fxxx)

FILES.f746 += stm32_usart_b.o
FILES.f746 += stm32_rcc_a.o
FILES.f746 += stm32_hal_rtc.o
FILES.f746 += stm32_board_f746.o
FILES.f746 += stm32_eth.o
FILES.f746 += stm32_lcd.o
FILES.f746 += lwip.o
FILES.f746 += $(FILES.f7xx)
FILES.f746 += $(FILES.fxxx)

FILES.f767 += stm32_usart_b.o
FILES.f767 += stm32_rcc_a.o
FILES.f767 += stm32_hal_rtc.o
FILES.f767 += stm32_eth.o
FILES.f767 += stm32_board_f767.o
FILES.f767 += lwip.o
FILES.f767 += $(FILES.f7xx)
FILES.f767 += $(FILES.fxxx)


#core
FILES.lwip += altcp_alloc.o
FILES.lwip += altcp.o
FILES.lwip += altcp_tcp.o
FILES.lwip += def.o
FILES.lwip += dns.o
FILES.lwip += inet_chksum.o
FILES.lwip += init.o
FILES.lwip += ip.o
FILES.lwip += mem.o
FILES.lwip += memp.o
FILES.lwip += netif.o
FILES.lwip += pbuf.o
FILES.lwip += raw.o
FILES.lwip += stats.o
FILES.lwip += sys.o
FILES.lwip += tcp.o
FILES.lwip += tcp_in.o
FILES.lwip += tcp_out.o
FILES.lwip += timeouts.o
FILES.lwip += udp.o

#core ipv4
FILES.lwip += autoip.o
FILES.lwip += dhcp.o
FILES.lwip += etharp.o
FILES.lwip += icmp.o
FILES.lwip += igmp.o
FILES.lwip += ip4_addr.o
FILES.lwip += ip4.o
FILES.lwip += ip4_frag.o

FILES.lwip += ethernet.o

FILES.lwip += integ.o

FILES.lwip += fs.o httpd.o

FILES.lwip += lwip_test.o

FILES.h7xx += $(FILES.lwip)
FILES.f767 += $(FILES.lwip)
FILES.f746 += $(FILES.lwip)

FILES.h735dk += $(FILES.h7xx)
FILES.h743wa += $(FILES.h7xx)
FILES.h743nucleo += $(FILES.h7xx)
FILES.h745nucleo += $(FILES.h7xx)

FILES.g4xx += crc_ccitt16.o
FILES.g4xx += stm32_exti_lxxx.o
FILES.g4xx += stm32_flash.o
FILES.g4xx += stm32_hal_bdma.o
FILES.g4xx += stm32_pwr_lxxx.o
FILES.g4xx += stm32_rcc_b.o
FILES.g4xx += stm32_usart_b.o
FILES.g4xx += stm32_wdog.o
FILES.g4xx += xmodem.o
FILES.g4xx += stm32_fdcan.o

FILES.l4xx += stm32_usart_b.o
FILES.l4xx += stm32_rcc_b.o
FILES.l4xx += stm32_flash.o
FILES.l4xx += crc_ccitt16.o
FILES.l4xx += xmodem.o
FILES.l4xx += stm32_wdog.o
FILES.l4xx += stm32_pwr_lxxx.o
FILES.l4xx += stm32_exti_lxxx.o

FILES.l432 += stm32_hal_bdma.o
FILES.l432 += stm32_hal_rtc.o
FILES.l432 += stm32_hal_spi.o
FILES.l432 += stm32_board_l432.o
FILES.l432 += ws2811.o

FILES.l452 += stm32_hal_bdma.o
FILES.l452 += stm32_hal_rtc.o
FILES.l452 += stm32_board_l452.o
FILES.l452 += ws2811.o

FILES.l496 += stm32_hal_bdma.o
FILES.l496 += stm32_hal_spi.o
FILES.l496 += stm32_hal_adc.o
FILES.l496 += stm32_board_l496.o
FILES.l496 += ws2811.o

FILES.l432 += $(FILES.l4xx)
FILES.l452 += $(FILES.l4xx)
FILES.l496 += $(FILES.l4xx)

#FILES.l496 += ds1302.o
#FILES.l496 += ds1302_test.o
FILES.l496 += stm32_hal_rtc.o

FILES.l4r += stm32_usart_b.o
FILES.l4r += stm32_rcc_b.o
FILES.l4r += stm32_board_l4r.o
FILES.l4r += stm32_wdog.o
FILES.l4r += stm32_pwr_lxxx.o
FILES.l4r += stm32_exti_lxxx.o

FILES.g474n += $(FILES.g4xx)
FILES.g474n += stm32_hal_rtc.o
FILES.g474n += stm32_board_g474n.o
FILES.g474n += fdcan.o

FILES.g431kbn += $(FILES.g4xx)
FILES.g431kbn += stm32_hal_rtc.o
FILES.g431kbn += stm32_board_g431kbn.o
FILES.g431kbn += fdcan.o

FILES += $(FILES.$(PROG))

DEPFILES = $(addprefix $(OBJDIR)/,$(patsubst %.o,%.d,$(FILES)))

# include dependency information
-include $(DEPFILES)

$(BUILD_DIR) $(OBJDIR):
	mkdir -p $@

OFILES = $(addprefix $(OBJDIR)/,$(FILES))
$(OFILES): | $(OBJDIR)

$(BUILD_DIR)/$(PROG).elf: $(OFILES) |$(BUILD_DIR)
	 $(XCC) -o $@ $^ $(XLDFLAGS)

$(BUILD_DIR)/$(PROG).bin: $(BUILD_DIR)/$(PROG).elf |$(BUILD_DIR)
	 $(XOBJCOPY) -O binary -R .eth -R .framebuf $^ $@

$(OBJDIR)/%.o: %.S
	 $(XCC) -c $(XCFLAGS) -o $@ $<

$(OBJDIR)/%.o: %.c
	 $(XCC) -c $(XCFLAGS) -D__S_FILE__=\"$(notdir $<)\" -o $@ $<
